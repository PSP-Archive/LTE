.TH "engine::gui::ICursorControl" 3 "29 Jul 2006" "LTE 3D Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
engine::gui::ICursorControl \- Interface to manipulate the mouse cursor.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <ICursorControl.h>\fP
.PP
Inherits \fBengine::IUnknown\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBsetVisible\fP (bool visible)=0"
.br
.RI "\fIChanges the visible state of the mouse cursor. \fP"
.ti -1c
.RI "virtual bool \fBisVisible\fP ()=0"
.br
.RI "\fIReturns if the cursor is currently visible. \fP"
.ti -1c
.RI "virtual void \fBsetPosition\fP (const \fBcore::position2d\fP< f32 > &pos)=0"
.br
.RI "\fISets the new position of the cursor. \fP"
.ti -1c
.RI "virtual void \fBsetPosition\fP (f32 x, f32 y)=0"
.br
.RI "\fISets the new position of the cursor. \fP"
.ti -1c
.RI "virtual void \fBsetPosition\fP (const \fBcore::position2d\fP< s32 > &pos)=0"
.br
.RI "\fISets the new position of the cursor. \fP"
.ti -1c
.RI "virtual void \fBsetPosition\fP (s32 x, s32 y)=0"
.br
.RI "\fISets the new position of the cursor. \fP"
.ti -1c
.RI "virtual \fBcore::position2d\fP< s32 > \fBgetPosition\fP ()=0"
.br
.RI "\fIReturns the current position of the mouse cursor. \fP"
.ti -1c
.RI "virtual \fBcore::position2d\fP< f32 > \fBgetRelativePosition\fP ()=0"
.br
.RI "\fIReturns the current position of the mouse cursor. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Interface to manipulate the mouse cursor. 
.PP
.SH "Member Function Documentation"
.PP 
.SS "virtual \fBcore::position2d\fP<s32> engine::gui::ICursorControl::getPosition ()\fC [pure virtual]\fP"
.PP
Returns the current position of the mouse cursor. 
.PP
\fBReturns:\fP
.RS 4
Returns the current position of the cursor. The returned position is the position of the mouse cursor in pixel units. 
.RE
.PP

.SS "virtual \fBcore::position2d\fP<f32> engine::gui::ICursorControl::getRelativePosition ()\fC [pure virtual]\fP"
.PP
Returns the current position of the mouse cursor. 
.PP
\fBReturns:\fP
.RS 4
Returns the current position of the cursor. The returned position is a value between (0.0f, 0.0f) and (1.0f, 1.0f), where (0.0f, 0.0f) is the top left corner and (1.0f, 1.0f) is the bottom right corner of the render window. 
.RE
.PP

.SS "virtual bool engine::gui::ICursorControl::isVisible ()\fC [pure virtual]\fP"
.PP
Returns if the cursor is currently visible. 
.PP
\fBReturns:\fP
.RS 4
Returns true if the cursor is visible, false if not. 
.RE
.PP

.SS "virtual void engine::gui::ICursorControl::setPosition (s32 x, s32 y)\fC [pure virtual]\fP"
.PP
Sets the new position of the cursor. 
.PP
\fBParameters:\fP
.RS 4
\fIpos,:\fP New position of the cursor. The coordinates are pixel units. 
.RE
.PP

.SS "virtual void engine::gui::ICursorControl::setPosition (const \fBcore::position2d\fP< s32 > & pos)\fC [pure virtual]\fP"
.PP
Sets the new position of the cursor. 
.PP
\fBParameters:\fP
.RS 4
\fIpos,:\fP New position of the cursor. The coordinates are pixel units. 
.RE
.PP

.SS "virtual void engine::gui::ICursorControl::setPosition (f32 x, f32 y)\fC [pure virtual]\fP"
.PP
Sets the new position of the cursor. 
.PP
\fBParameters:\fP
.RS 4
\fIpos,:\fP New position of the cursor. The position must be between (0.0f, 0.0f) and (1.0f, 1.0f), where (0.0f, 0.0f) is the top left corner and (1.0f, 1.0f) is the bottom right corner of the render window. 
.RE
.PP

.SS "virtual void engine::gui::ICursorControl::setPosition (const \fBcore::position2d\fP< f32 > & pos)\fC [pure virtual]\fP"
.PP
Sets the new position of the cursor. 
.PP
\fBParameters:\fP
.RS 4
\fIpos,:\fP New position of the cursor. The position must be between (0.0f, 0.0f) and (1.0f, 1.0f), where (0.0f, 0.0f) is the top left corner and (1.0f, 1.0f) is the bottom right corner of the render window. 
.RE
.PP

.SS "virtual void engine::gui::ICursorControl::setVisible (bool visible)\fC [pure virtual]\fP"
.PP
Changes the visible state of the mouse cursor. 
.PP
\fBParameters:\fP
.RS 4
\fIvisible,:\fP The new visible state. If true, the cursor will be visible, if false, it will be invisible. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for LTE 3D Engine from the source code.
