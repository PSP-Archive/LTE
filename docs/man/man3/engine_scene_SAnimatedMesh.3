.TH "engine::scene::SAnimatedMesh" 3 "29 Jul 2006" "LTE 3D Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
engine::scene::SAnimatedMesh \- Simple implementation of the \fBIAnimatedMesh\fP interface.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <SAnimatedMesh.h>\fP
.PP
Inherits \fBengine::scene::IAnimatedMesh\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSAnimatedMesh\fP ()"
.br
.RI "\fIconstructor \fP"
.ti -1c
.RI "\fB~SAnimatedMesh\fP ()"
.br
.RI "\fIdestructor \fP"
.ti -1c
.RI "virtual s32 \fBgetFrameCount\fP ()"
.br
.ti -1c
.RI "virtual \fBIMesh\fP * \fBgetMesh\fP (s32 frame, s32 detailLevel, s32 startFrameLoop=-1, s32 endFrameLoop=-1)"
.br
.ti -1c
.RI "void \fBaddMesh\fP (\fBIMesh\fP *mesh)"
.br
.RI "\fIadds a Mesh \fP"
.ti -1c
.RI "virtual const \fBcore::aabbox3d\fP< f32 > & \fBgetBoundingBox\fP () const "
.br
.ti -1c
.RI "virtual \fBE_ANIMATED_MESH_TYPE\fP \fBgetMeshType\fP () const "
.br
.RI "\fIReturns the type of the animated mesh. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Simple implementation of the \fBIAnimatedMesh\fP interface. 
.PP
.SH "Member Function Documentation"
.PP 
.SS "virtual const \fBcore::aabbox3d\fP<f32>& engine::scene::SAnimatedMesh::getBoundingBox () const\fC [inline, virtual]\fP"
.PP
Returns an axis aligned bounding box of the mesh. 
.PP
\fBReturns:\fP
.RS 4
A bounding box of this mesh is returned. 
.RE
.PP

.PP
Implements \fBengine::scene::IAnimatedMesh\fP.
.SS "virtual s32 engine::scene::SAnimatedMesh::getFrameCount ()\fC [inline, virtual]\fP"
.PP
Gets the frame count of the animated mesh. 
.PP
\fBReturns:\fP
.RS 4
Returns the amount of frames. If the amount is 1, it is a static, non animated mesh. 
.RE
.PP

.PP
Implements \fBengine::scene::IAnimatedMesh\fP.
.SS "virtual \fBIMesh\fP* engine::scene::SAnimatedMesh::getMesh (s32 frame, s32 detailLevel, s32 startFrameLoop = \fC-1\fP, s32 endFrameLoop = \fC-1\fP)\fC [inline, virtual]\fP"
.PP
Returns the \fBIMesh\fP interface for a frame. 
.PP
\fBParameters:\fP
.RS 4
\fIframe,:\fP Frame number as zero based index. The maximum frame number is \fBgetFrameCount()\fP - 1; 
.br
\fIdetailLevel,:\fP Level of detail. 0 is the lowest, 255 the highest level of detail. Most meshes will ignore the detail level. 
.RE
.PP
\fBReturns:\fP
.RS 4
Returns the animated mesh based on a detail level. 
.RE
.PP

.PP
Implements \fBengine::scene::IAnimatedMesh\fP.

.SH "Author"
.PP 
Generated automatically by Doxygen for LTE 3D Engine from the source code.
